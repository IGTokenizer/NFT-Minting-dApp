{"ast":null,"code":"var _jsxFileName = \"/home/faysal/Secutry/Blockchain Development/firstProject-blockchain/website/buildspace-nft-course-starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\nimport myEpicNft from './utils/secutryNFT.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\nconst App = () => {\n  _s();\n  const [isMinting, setIsMinting] = useState(false);\n  const [mintingComplete, setMintingComplete] = useState(false);\n  const askContractToMintNft = async () => {\n    const CONTRACT_ADDRESS = \"0x152fc212943617e26B7a0645DC1A109A3079B673\";\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        setIsMinting(true);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let nftTxn = await connectedContract.makeAnEpicNFT();\n        console.log(\"Mining...please wait.\");\n        await nftTxn.wait();\n        console.log(`Mined, see transaction: https://goerli.etherscan.io/tx/${nftTxn.hash}`);\n\n        // Update state to indicate minting has finished\n        setIsMinting(false);\n        setMintingComplete(true);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  // Modify the render function\n  const renderMintUI = () => {\n    if (isMinting) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"minting-text color-white text-white\",\n        children: \"Minting in progress... Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, this);\n    } else if (mintingComplete) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"minting-text text-white\",\n        children: \"Minting complete! Check your wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: askContractToMintNft,\n        className: \"cta-button connect-wallet-button\",\n        children: \"Mint NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  // Modify the return statement in the App component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"My NFT Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"Each unique. Each beautiful. Discover your NFT today.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), currentAccount === \"\" ? renderNotConnectedContainer() : renderMintUI()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f5GsJNn6BfbgGQQptTbpVvalSkg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","myEpicNft","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","OPENSEA_LINK","TOTAL_MINT_COUNT","App","_s","isMinting","setIsMinting","mintingComplete","setMintingComplete","askContractToMintNft","CONTRACT_ADDRESS","ethereum","window","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","abi","console","log","nftTxn","makeAnEpicNFT","wait","hash","error","currentAccount","setCurrentAccount","checkIfWalletIsConnected","accounts","request","method","length","account","connectWallet","alert","renderNotConnectedContainer","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMintUI","_c","$RefreshReg$"],"sources":["/home/faysal/Secutry/Blockchain Development/firstProject-blockchain/website/buildspace-nft-course-starter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\";\nimport myEpicNft from './utils/secutryNFT.json';\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\n\nconst App = () => {\n  const [isMinting, setIsMinting] = useState(false);\n  const [mintingComplete, setMintingComplete] = useState(false);\n  const askContractToMintNft = async () => {\n    const CONTRACT_ADDRESS = \"0x152fc212943617e26B7a0645DC1A109A3079B673\";\n    try {\n      const { ethereum } = window;\n  \n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n  \n        console.log(\"Going to pop wallet now to pay gas...\")\n        setIsMinting(true);\n\n        console.log(\"Going to pop wallet now to pay gas...\")\n        let nftTxn = await connectedContract.makeAnEpicNFT();\n\n        console.log(\"Mining...please wait.\")\n        await nftTxn.wait();\n\n        console.log(`Mined, see transaction: https://goerli.etherscan.io/tx/${nftTxn.hash}`);\n\n        // Update state to indicate minting has finished\n        setIsMinting(false);\n        setMintingComplete(true);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  \n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  }\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]); \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const renderNotConnectedContainer = () => (\n    <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, [])\n\n  // Modify the render function\n  const renderMintUI = () => {\n    if (isMinting) {\n      return <p className=\"minting-text color-white text-white\">Minting in progress... Please wait.</p>;\n    } else if (mintingComplete) {\n      return <p className=\"minting-text text-white\">Minting complete! Check your wallet.</p>;\n    } else {\n      return (\n        <button onClick={askContractToMintNft} className=\"cta-button connect-wallet-button\">\n          Mint NFT\n        </button>\n      );\n    }\n  }\n\n  // Modify the return statement in the App component\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">My NFT Collection</p>\n          <p className=\"sub-text\">\n            Each unique. Each beautiful. Discover your NFT today.\n          </p>\n          {currentAccount === \"\" ? renderNotConnectedContainer() : renderMintUI()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}